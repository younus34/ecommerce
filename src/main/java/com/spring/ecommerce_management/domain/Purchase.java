package com.spring.ecommerce_management.domain;
// Generated Jul 20, 2018 10:14:47 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Purchase generated by hbm2java
 */
@Entity
@Table(name="purchase"
    ,catalog="changed"
)
public class Purchase  implements java.io.Serializable {


     private Integer purchaseId;
     private Product product;
     private SupplierInfo supplierInfo;
     private double purUnitPrice;
     private int productQty;
     private Date purDate;
     private double purTotalPrice;
     private Set<ProductOrder> productOrders = new HashSet<ProductOrder>(0);

    public Purchase() {
    }

	
    public Purchase(Product product, SupplierInfo supplierInfo, double purUnitPrice, int productQty, Date purDate, double purTotalPrice) {
        this.product = product;
        this.supplierInfo = supplierInfo;
        this.purUnitPrice = purUnitPrice;
        this.productQty = productQty;
        this.purDate = purDate;
        this.purTotalPrice = purTotalPrice;
    }
    public Purchase(Product product, SupplierInfo supplierInfo, double purUnitPrice, int productQty, Date purDate, double purTotalPrice, Set<ProductOrder> productOrders) {
       this.product = product;
       this.supplierInfo = supplierInfo;
       this.purUnitPrice = purUnitPrice;
       this.productQty = productQty;
       this.purDate = purDate;
       this.purTotalPrice = purTotalPrice;
       this.productOrders = productOrders;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="purchase_id", unique=true, nullable=false)
    public Integer getPurchaseId() {
        return this.purchaseId;
    }
    
    public void setPurchaseId(Integer purchaseId) {
        this.purchaseId = purchaseId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="product_id", nullable=false)
    public Product getProduct() {
        return this.product;
    }
    
    public void setProduct(Product product) {
        this.product = product;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="supplier_id", nullable=false)
    public SupplierInfo getSupplierInfo() {
        return this.supplierInfo;
    }
    
    public void setSupplierInfo(SupplierInfo supplierInfo) {
        this.supplierInfo = supplierInfo;
    }

    
    @Column(name="pur_unit_price", nullable=false, precision=22, scale=0)
    public double getPurUnitPrice() {
        return this.purUnitPrice;
    }
    
    public void setPurUnitPrice(double purUnitPrice) {
        this.purUnitPrice = purUnitPrice;
    }

    
    @Column(name="product_qty", nullable=false)
    public int getProductQty() {
        return this.productQty;
    }
    
    public void setProductQty(int productQty) {
        this.productQty = productQty;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="pur_date", nullable=false, length=10)
    public Date getPurDate() {
        return this.purDate;
    }
    
    public void setPurDate(Date purDate) {
        this.purDate = purDate;
    }

    
    @Column(name="pur_total_price", nullable=false, precision=22, scale=0)
    public double getPurTotalPrice() {
        return this.purTotalPrice;
    }
    
    public void setPurTotalPrice(double purTotalPrice) {
        this.purTotalPrice = purTotalPrice;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="purchase")
    public Set<ProductOrder> getProductOrders() {
        return this.productOrders;
    }
    
    public void setProductOrders(Set<ProductOrder> productOrders) {
        this.productOrders = productOrders;
    }




}


